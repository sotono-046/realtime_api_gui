[project]
name = "realtime-api-gui"
version = "0.1.0"
description = "RealtimeAPI GUI application for voice generation"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "coloredlogs>=15.0.1",
    "openai>=1.12.0",
    "PyQt6>=6.6.1",
    "python-dotenv>=1.0.0",
    "sounddevice>=0.4.6",
    "soundfile>=0.12.1",
    "websocket>=0.2.1",
    "websocket-client>=1.8.0",
    "pydub>=0.25.1",
    "auto-editor>=23.12.1",
]



[tool.rye]
managed = true
dev-dependencies = []

[dependency-groups]
dev = [
    "pyinstaller>=6.12.0",
    "ruff>=0.11.2",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-qt>=4.2.0",
    "coverage>=7.3.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=models",
    "--cov=utils", 
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests as GUI tests",
]

[tool.coverage.run]
source = ["models", "utils"]
omit = [
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
